{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"1AmTJ2YHF90F"},"outputs":[],"source":["!pip install pandas numpy scikit-learn\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsRegressor"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1bv_4EaGLPo","executionInfo":{"status":"ok","timestamp":1689271495887,"user_tz":-540,"elapsed":2296,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"944bbf2e-710a-4a0d-f48c-d108cf6f6b46"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["data = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/baseline/test.csv')\n","data = data.drop('Unnamed: 0', axis=1)\n","data.tail()"],"metadata":{"id":"0Bd4MedX9Kls","executionInfo":{"status":"ok","timestamp":1689271679093,"user_tz":-540,"elapsed":477,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"0dd22782-6cf9-4680-a910-97d5a5041c26"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain  \\\n","3118  2023-06-26  중랑구  17.0   11.0  0.0277  0.0178  0.31  0.0022       65.0   \n","3119  2023-06-27  중랑구  37.0   11.0  0.0465  0.0174  0.32  0.0022        2.0   \n","3120  2023-06-28  중랑구  35.0   21.0  0.0473  0.0204  0.37  0.0023        0.0   \n","3121  2023-06-29  중랑구  33.0   22.0  0.0328  0.0198  0.31  0.0021      133.5   \n","3122  2023-06-30  중랑구  35.0   25.0  0.0462  0.0260  0.41  0.0022        0.0   \n","\n","      VisitNum  \n","3118   39284.0  \n","3119   41083.0  \n","3120   41516.0  \n","3121   39480.0  \n","3122   40893.0  "],"text/html":["\n","\n","  <div id=\"df-a9d7f5dd-b944-4621-a8bc-4729a355799c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","      <th>VisitNum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3118</th>\n","      <td>2023-06-26</td>\n","      <td>중랑구</td>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>0.0277</td>\n","      <td>0.0178</td>\n","      <td>0.31</td>\n","      <td>0.0022</td>\n","      <td>65.0</td>\n","      <td>39284.0</td>\n","    </tr>\n","    <tr>\n","      <th>3119</th>\n","      <td>2023-06-27</td>\n","      <td>중랑구</td>\n","      <td>37.0</td>\n","      <td>11.0</td>\n","      <td>0.0465</td>\n","      <td>0.0174</td>\n","      <td>0.32</td>\n","      <td>0.0022</td>\n","      <td>2.0</td>\n","      <td>41083.0</td>\n","    </tr>\n","    <tr>\n","      <th>3120</th>\n","      <td>2023-06-28</td>\n","      <td>중랑구</td>\n","      <td>35.0</td>\n","      <td>21.0</td>\n","      <td>0.0473</td>\n","      <td>0.0204</td>\n","      <td>0.37</td>\n","      <td>0.0023</td>\n","      <td>0.0</td>\n","      <td>41516.0</td>\n","    </tr>\n","    <tr>\n","      <th>3121</th>\n","      <td>2023-06-29</td>\n","      <td>중랑구</td>\n","      <td>33.0</td>\n","      <td>22.0</td>\n","      <td>0.0328</td>\n","      <td>0.0198</td>\n","      <td>0.31</td>\n","      <td>0.0021</td>\n","      <td>133.5</td>\n","      <td>39480.0</td>\n","    </tr>\n","    <tr>\n","      <th>3122</th>\n","      <td>2023-06-30</td>\n","      <td>중랑구</td>\n","      <td>35.0</td>\n","      <td>25.0</td>\n","      <td>0.0462</td>\n","      <td>0.0260</td>\n","      <td>0.41</td>\n","      <td>0.0022</td>\n","      <td>0.0</td>\n","      <td>40893.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9d7f5dd-b944-4621-a8bc-4729a355799c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-62ac2ad9-e31f-4350-b531-1f81c662834f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62ac2ad9-e31f-4350-b531-1f81c662834f')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-62ac2ad9-e31f-4350-b531-1f81c662834f button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a9d7f5dd-b944-4621-a8bc-4729a355799c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a9d7f5dd-b944-4621-a8bc-4729a355799c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["data2 = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/baseline/gangnam_test.csv')\n","data2 = data2.drop('Unnamed: 0', axis=1)\n","data2.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dOhDYDEAcLT_","executionInfo":{"status":"ok","timestamp":1689271728243,"user_tz":-540,"elapsed":5,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"2d0f5739-7ba8-4812-fd53-e926e7e999e9"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain  \\\n","162  2023-06-26  강남구  19.0   12.0  0.0282  0.0139  0.33  0.0030      113.5   \n","163  2023-06-27  강남구  18.0   12.0  0.0538  0.0111  0.31  0.0032        5.0   \n","164  2023-06-28  강남구  30.0   21.0  0.0507  0.0129  0.35  0.0030        0.0   \n","165  2023-06-29  강남구  33.0   23.0  0.0371  0.0140  0.34  0.0030      157.5   \n","166  2023-06-30  강남구  33.0   25.0  0.0478  0.0229  0.44  0.0030        1.0   \n","\n","     VisitNum  \n","162  189449.0  \n","163  190542.0  \n","164  198236.0  \n","165  193811.0  \n","166  210722.0  "],"text/html":["\n","\n","  <div id=\"df-8ff02861-4434-4dd2-94cc-84bdcf5fb07e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","      <th>VisitNum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>162</th>\n","      <td>2023-06-26</td>\n","      <td>강남구</td>\n","      <td>19.0</td>\n","      <td>12.0</td>\n","      <td>0.0282</td>\n","      <td>0.0139</td>\n","      <td>0.33</td>\n","      <td>0.0030</td>\n","      <td>113.5</td>\n","      <td>189449.0</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>2023-06-27</td>\n","      <td>강남구</td>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>0.0538</td>\n","      <td>0.0111</td>\n","      <td>0.31</td>\n","      <td>0.0032</td>\n","      <td>5.0</td>\n","      <td>190542.0</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>2023-06-28</td>\n","      <td>강남구</td>\n","      <td>30.0</td>\n","      <td>21.0</td>\n","      <td>0.0507</td>\n","      <td>0.0129</td>\n","      <td>0.35</td>\n","      <td>0.0030</td>\n","      <td>0.0</td>\n","      <td>198236.0</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2023-06-29</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>23.0</td>\n","      <td>0.0371</td>\n","      <td>0.0140</td>\n","      <td>0.34</td>\n","      <td>0.0030</td>\n","      <td>157.5</td>\n","      <td>193811.0</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>2023-06-30</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>25.0</td>\n","      <td>0.0478</td>\n","      <td>0.0229</td>\n","      <td>0.44</td>\n","      <td>0.0030</td>\n","      <td>1.0</td>\n","      <td>210722.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ff02861-4434-4dd2-94cc-84bdcf5fb07e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-8f3f63dd-e5eb-4130-9ef9-7604a2f948a7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f3f63dd-e5eb-4130-9ef9-7604a2f948a7')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-8f3f63dd-e5eb-4130-9ef9-7604a2f948a7 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8ff02861-4434-4dd2-94cc-84bdcf5fb07e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8ff02861-4434-4dd2-94cc-84bdcf5fb07e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["def load_and_split_data(data, test_size=0.2, random_state=42):\n","\n","    # 특성 변수 (X)와 타깃 변수 (y)를 분리\n","    X = data[['PM10', 'PM2.5', 'O3', 'NO2', 'CO', 'SO2', 'DailyRain']]\n","    y = data['VisitNum']\n","\n","    # 데이터셋을 train, val, test로 분할\n","    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n","    X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=test_size, random_state=random_state)\n","\n","    return X_train, X_val, X_test, y_train, y_val, y_test\n"],"metadata":{"id":"pwtIZiTFJlFL","executionInfo":{"status":"ok","timestamp":1689271685516,"user_tz":-540,"elapsed":327,"user":{"displayName":"신진영","userId":"04497995254913851370"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["def train_and_evaluate(X_train, X_val, X_test, y_train, y_val, y_test, k):\n","    # KNN 모델 초기화\n","    knn = KNeighborsRegressor(n_neighbors=k)\n","\n","    # 모델 학습\n","    knn.fit(X_train, y_train)\n","\n","    # Val 데이터셋으로 모델 성능 평가 (R^2 점수)\n","    val_score = knn.score(X_val, y_val)\n","\n","    # Test 데이터셋으로 모델 성능 평가 (R^2 점수)\n","    test_score = knn.score(X_test, y_test)\n","\n","    train_score = knn.score(X_train, y_train)\n","\n","    return train_score, val_score, test_score"],"metadata":{"id":"XqoeDLWyKAaA","executionInfo":{"status":"ok","timestamp":1689271685911,"user_tz":-540,"elapsed":2,"user":{"displayName":"신진영","userId":"04497995254913851370"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["# 데이터 로드 및 분할\n","X_train, X_val, X_test, y_train, y_val, y_test = load_and_split_data(data)\n","\n","# KNN 모델 학습 및 평가\n","k = 3  # KNN의 이웃 수 (임의로 설정)\n","train_score, val_score, test_score = train_and_evaluate(X_train, X_val, X_test, y_train, y_val, y_test, k)\n","\n","print(f'Validation R^2 Score: {val_score:.4f}')\n","print(f'Test R^2 Score: {test_score:.4f}')\n","print(train_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9cwfIvlkCd2A","executionInfo":{"status":"ok","timestamp":1689271777294,"user_tz":-540,"elapsed":3,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"6237f9cf-e2df-4f8a-e6fa-b8745f9e12e4"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation R^2 Score: -0.1684\n","Test R^2 Score: -0.1875\n","0.372332577195686\n"]}]},{"cell_type":"code","source":["# 데이터 로드 및 분할\n","X_train, X_val, X_test, y_train, y_val, y_test = load_and_split_data(data2)\n","\n","# KNN 모델 학습 및 평가\n","k = 3  # KNN의 이웃 수 (임의로 설정)\n","train_score, val_score, test_score = train_and_evaluate(X_train, X_val, X_test, y_train, y_val, y_test, k)\n","\n","print(f'Validation R^2 Score: {val_score:.4f}')\n","print(f'Test R^2 Score: {test_score:.4f}')\n","print(train_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1utdeUG-cUtz","executionInfo":{"status":"ok","timestamp":1689271755529,"user_tz":-540,"elapsed":314,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"441a8077-7eac-4b78-c999-8c2aa7befa8c"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation R^2 Score: -0.3005\n","Test R^2 Score: -0.3925\n","0.5439862590882494\n"]}]},{"cell_type":"code","source":["# # 데이터 로드 및 분할\n","# X_train, X_val, X_test, y_train, y_val, y_test = load_and_split_data(data)\n","\n","# # KNN 모델 학습 및 평가\n","# k = 5  # KNN의 이웃 수 (임의로 설정)\n","# val_score, test_score = train_and_evaluate(X_train, X_val, X_test, y_train, y_val, y_test, k)\n","\n","# print(f'Validation R^2 Score: {val_score:.4f}')\n","# print(f'Test R^2 Score: {test_score:.4f}')\n","\n","# # 사용자 입력으로 미세먼지 농도 받기\n","# dust_concentration = float(input('Enter the dust concentration: '))\n","\n","# # 새로운 데이터로 KNN 모델 학습\n","# knn = KNeighborsRegressor(n_neighbors=k)\n","# knn.fit(X_train, y_train)\n","\n","# # 입력값을 바탕으로 인구밀집도 예측\n","# predicted_density = knn.predict([[dust_concentration]])\n","# print(f'Predicted population density in Seoul: {predicted_density[0]:.2f}')\n"],"metadata":{"id":"yxkrplr3KHAg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"i38g_HzkCWe9"},"execution_count":null,"outputs":[]}]}