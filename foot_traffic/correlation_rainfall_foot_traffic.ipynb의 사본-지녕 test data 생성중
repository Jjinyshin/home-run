{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RKcKOZi7H_fC","executionInfo":{"status":"ok","timestamp":1689249641768,"user_tz":-540,"elapsed":18971,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"fdc68bb9-1866-45b7-bca2-2e9ef4c415d8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import matplotlib.dates as mdates"],"metadata":{"id":"fIuJ1Rk1ITfI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## 폰트 깨짐 문제 해결##\n","# 필요 라이브러리 불러오기\n","import matplotlib.font_manager as fm\n","import os\n","import matplotlib.pyplot as plt\n","\n","# apt-get : 패키지 설치 명령어\n","# -qq : 에러외의 메세지 숨기는 옵션키\n","!apt-get -qq install fonts-nanum\n","\n","fe = fm.FontEntry(\n","    fname=r'/usr/share/fonts/truetype/nanum/NanumGothic.ttf', # ttf 파일이 저장되어 있는 경로\n","    name='NanumGothic')                        # 이 폰트의 원하는 이름 설정\n","fm.fontManager.ttflist.insert(0, fe)              # Matplotlib에 폰트 추가\n","plt.rcParams.update({'font.size': 9, 'font.family': 'NanumGothic'}) # 폰트 설정\n","plt.rcParams['axes.unicode_minus'] = False # 마이너스 보이게 하기"],"metadata":{"id":"Dup-4C5ePuZJ","executionInfo":{"status":"ok","timestamp":1689249655301,"user_tz":-540,"elapsed":7764,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ed622214-b5c3-4c02-c564-48eb3f0d9599"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Selecting previously unselected package fonts-nanum.\n","(Reading database ... 123105 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20180306-3_all.deb ...\n","Unpacking fonts-nanum (20180306-3) ...\n","Setting up fonts-nanum (20180306-3) ...\n","Processing triggers for fontconfig (2.13.1-2ubuntu3) ...\n"]}]},{"cell_type":"code","source":["foot_traffic_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/merged_foot_traffic.csv')\n","rain_fall_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/RainFall_final.csv')\n","\n","foot_traffic_df = foot_traffic_df_origin.copy()\n","rain_fall_df = rain_fall_df_origin.copy()\n","rain_fall_grouped_df = rain_fall_df.groupby(['Gu', 'Date']).agg({'DailyRain': 'sum'}).reset_index()"],"metadata":{"id":"8bLSucgnIcd1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 유동인구 데이터\n","foot_traffic_df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"SNA2058KItOs","executionInfo":{"status":"ok","timestamp":1689250482299,"user_tz":-540,"elapsed":505,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"ac8cb332-2792-4bea-838d-44976cf352fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   자치구        측정날짜     방문자수\n","3504      Geumcheon-gu  2023-07-02  67371.0\n","3505          Nowon-gu  2023-07-02  70257.0\n","3506  Seoul_Grand_Park  2023-07-02  18090.0\n","3507         Jongno-gu  2023-07-02  28642.0\n","3508        Yongsan-gu  2023-07-02     51.0"],"text/html":["\n","\n","  <div id=\"df-fc4772ed-26f2-42da-9121-ca041f0d828d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>자치구</th>\n","      <th>측정날짜</th>\n","      <th>방문자수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3504</th>\n","      <td>Geumcheon-gu</td>\n","      <td>2023-07-02</td>\n","      <td>67371.0</td>\n","    </tr>\n","    <tr>\n","      <th>3505</th>\n","      <td>Nowon-gu</td>\n","      <td>2023-07-02</td>\n","      <td>70257.0</td>\n","    </tr>\n","    <tr>\n","      <th>3506</th>\n","      <td>Seoul_Grand_Park</td>\n","      <td>2023-07-02</td>\n","      <td>18090.0</td>\n","    </tr>\n","    <tr>\n","      <th>3507</th>\n","      <td>Jongno-gu</td>\n","      <td>2023-07-02</td>\n","      <td>28642.0</td>\n","    </tr>\n","    <tr>\n","      <th>3508</th>\n","      <td>Yongsan-gu</td>\n","      <td>2023-07-02</td>\n","      <td>51.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc4772ed-26f2-42da-9121-ca041f0d828d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4680d04c-6358-434e-ad21-35dbc10eff14\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4680d04c-6358-434e-ad21-35dbc10eff14')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4680d04c-6358-434e-ad21-35dbc10eff14 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc4772ed-26f2-42da-9121-ca041f0d828d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc4772ed-26f2-42da-9121-ca041f0d828d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# 강우량 데이터\n","rain_fall_grouped_df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"vj4YlFmQIuHJ","executionInfo":{"status":"ok","timestamp":1689250492616,"user_tz":-540,"elapsed":334,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"1885fcd2-8e66-40f1-f6fd-55c26cddf6ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Gu        Date  DailyRain\n","4475  중랑구  2023-06-26       65.0\n","4476  중랑구  2023-06-27        2.0\n","4477  중랑구  2023-06-28        0.0\n","4478  중랑구  2023-06-29      133.5\n","4479  중랑구  2023-06-30        0.0"],"text/html":["\n","\n","  <div id=\"df-e60326e9-c949-48e6-8fad-87c378090283\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gu</th>\n","      <th>Date</th>\n","      <th>DailyRain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4475</th>\n","      <td>중랑구</td>\n","      <td>2023-06-26</td>\n","      <td>65.0</td>\n","    </tr>\n","    <tr>\n","      <th>4476</th>\n","      <td>중랑구</td>\n","      <td>2023-06-27</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4477</th>\n","      <td>중랑구</td>\n","      <td>2023-06-28</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4478</th>\n","      <td>중랑구</td>\n","      <td>2023-06-29</td>\n","      <td>133.5</td>\n","    </tr>\n","    <tr>\n","      <th>4479</th>\n","      <td>중랑구</td>\n","      <td>2023-06-30</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e60326e9-c949-48e6-8fad-87c378090283')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-0f340707-f5ef-4f02-8e85-758f71172439\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f340707-f5ef-4f02-8e85-758f71172439')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-0f340707-f5ef-4f02-8e85-758f71172439 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e60326e9-c949-48e6-8fad-87c378090283 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e60326e9-c949-48e6-8fad-87c378090283');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["# 강남구 6월 유동인구-강우량 상관관계 분석"],"metadata":{"id":"BS9Kr0fskNJa"}},{"cell_type":"code","source":["# 강남구의 2023-06-01~2023-06-30 데이터\n","gangnam_foot_traffic = foot_traffic_df[foot_traffic_df['자치구'] == 'Gangnam-gu']\n","gangnam_rain_fall = rain_fall_grouped_df[rain_fall_grouped_df['Gu'] == '강남구']"],"metadata":{"id":"ODA0hWAQNwWS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["air_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/seoul_air.csv')\n","air_df_origin = air_df_origin.drop('Unnamed: 0', axis=1)\n","gangnam_air = air_df_origin[air_df_origin['Gu'] == '강남구']"],"metadata":{"id":"07vKQ5jzs_QW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gangnam_air.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"EY4KzKnvtHKk","executionInfo":{"status":"ok","timestamp":1689260473288,"user_tz":-540,"elapsed":428,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"18332893-b2b8-4743-8620-92d896d82b0c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2\n","24   2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040\n","50   2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034\n","76   2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034\n","102  2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036\n","128  2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038"],"text/html":["\n","\n","  <div id=\"df-c20f565c-8254-46e1-a580-e1103a3ffc3a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c20f565c-8254-46e1-a580-e1103a3ffc3a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-69f0a2b0-b12f-494a-b3f4-816f2bd945a5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69f0a2b0-b12f-494a-b3f4-816f2bd945a5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-69f0a2b0-b12f-494a-b3f4-816f2bd945a5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c20f565c-8254-46e1-a580-e1103a3ffc3a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c20f565c-8254-46e1-a580-e1103a3ffc3a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["gangnam_foot_traffic"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"7xfdCL81snSw","executionInfo":{"status":"ok","timestamp":1689259244683,"user_tz":-540,"elapsed":557,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"9293fefd-8ec3-40f4-df5d-d339321730c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             자치구       측정날짜      방문자수\n","7     Gangnam-gu 2023-01-01     443.0\n","30    Gangnam-gu 2023-01-02  106075.0\n","63    Gangnam-gu 2023-01-03  109680.0\n","89    Gangnam-gu 2023-01-04  113975.0\n","96    Gangnam-gu 2023-01-05  112966.0\n","...          ...        ...       ...\n","3394  Gangnam-gu 2023-06-28  198236.0\n","3436  Gangnam-gu 2023-06-29  193811.0\n","3449  Gangnam-gu 2023-06-30  210722.0\n","3480  Gangnam-gu 2023-07-01  202121.0\n","3496  Gangnam-gu 2023-07-02  172811.0\n","\n","[169 rows x 3 columns]"],"text/html":["\n","\n","  <div id=\"df-0e589f25-53ab-4d28-82a3-f23d828acdb8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>자치구</th>\n","      <th>측정날짜</th>\n","      <th>방문자수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-01-01</td>\n","      <td>443.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-01-02</td>\n","      <td>106075.0</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-01-03</td>\n","      <td>109680.0</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-01-04</td>\n","      <td>113975.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-01-05</td>\n","      <td>112966.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3394</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-06-28</td>\n","      <td>198236.0</td>\n","    </tr>\n","    <tr>\n","      <th>3436</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-06-29</td>\n","      <td>193811.0</td>\n","    </tr>\n","    <tr>\n","      <th>3449</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-06-30</td>\n","      <td>210722.0</td>\n","    </tr>\n","    <tr>\n","      <th>3480</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-07-01</td>\n","      <td>202121.0</td>\n","    </tr>\n","    <tr>\n","      <th>3496</th>\n","      <td>Gangnam-gu</td>\n","      <td>2023-07-02</td>\n","      <td>172811.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>169 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e589f25-53ab-4d28-82a3-f23d828acdb8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-71902134-5201-4a50-a92e-b203219dd19d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71902134-5201-4a50-a92e-b203219dd19d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-71902134-5201-4a50-a92e-b203219dd19d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0e589f25-53ab-4d28-82a3-f23d828acdb8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0e589f25-53ab-4d28-82a3-f23d828acdb8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["gangnam_rain_fall"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"bqfLoHRfsXXI","executionInfo":{"status":"ok","timestamp":1689262514144,"user_tz":-540,"elapsed":353,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"864e422c-ce5f-4c8c-f4d4-d78391684ccc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Gu        Date  DailyRain\n","0    강남구  2023-01-01        0.0\n","1    강남구  2023-01-02        0.0\n","2    강남구  2023-01-03        0.0\n","3    강남구  2023-01-04        0.0\n","4    강남구  2023-01-05        0.0\n","..   ...         ...        ...\n","176  강남구  2023-06-26      113.5\n","177  강남구  2023-06-27        5.0\n","178  강남구  2023-06-28        0.0\n","179  강남구  2023-06-29      157.5\n","180  강남구  2023-06-30        1.0\n","\n","[181 rows x 3 columns]"],"text/html":["\n","\n","  <div id=\"df-5cdd3139-ea9a-4b9d-88f5-aa0da0e4a826\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gu</th>\n","      <th>Date</th>\n","      <th>DailyRain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강남구</td>\n","      <td>2023-01-02</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강남구</td>\n","      <td>2023-01-03</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강남구</td>\n","      <td>2023-01-04</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>강남구</td>\n","      <td>2023-01-05</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>강남구</td>\n","      <td>2023-06-26</td>\n","      <td>113.5</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>강남구</td>\n","      <td>2023-06-27</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>강남구</td>\n","      <td>2023-06-28</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>강남구</td>\n","      <td>2023-06-29</td>\n","      <td>157.5</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>강남구</td>\n","      <td>2023-06-30</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>181 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cdd3139-ea9a-4b9d-88f5-aa0da0e4a826')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-fcbdf6ae-ab06-44ff-b0b6-416a696c1cb5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fcbdf6ae-ab06-44ff-b0b6-416a696c1cb5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-fcbdf6ae-ab06-44ff-b0b6-416a696c1cb5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5cdd3139-ea9a-4b9d-88f5-aa0da0e4a826 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5cdd3139-ea9a-4b9d-88f5-aa0da0e4a826');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["### 일단 강남구 6월 데이터들로만 훈련하기 -> 정확도 보고나서 데이터 늘리기\n","- 진행\n","  - 1-6월 전부 적용; 유동인구 데이터에서 없는 날짜들 확인하고 처리(일단 모든 date 다 있는 데이터 기준으로 합친다. 유동인구는 없는 date는 nan으로 채워서 ㄱㄱ) -> 그러고 걍 nan들어간놈들은 제외하고서 train하면 되잖아;\n","- 확장 방향\n","  - 용산구로 변경"],"metadata":{"id":"M5RRrjDiyzbC"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# 예시 데이터프레임 생성\n","data1 = {'date': ['2022-07-01', '2022-07-02', '2022-07-03'],'value1': [1, 2, 3]}\n","data2 = {'date': ['2022-07-01', '2022-07-02', '2022-07-03'],'value2': [4, 5, 6]}\n","\n","df1 = pd.DataFrame(data1)\n","df2 = pd.DataFrame(data2)\n","\n","# 날짜 컬럼을 기준으로 두 데이터프레임 합치기\n","merged_df = pd.merge(df1, df2, on='date')\n","\n","# 결과 출력\n","print(merged_df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LQR1J7P-0pxl","executionInfo":{"status":"ok","timestamp":1689262463949,"user_tz":-540,"elapsed":420,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"5159bbc8-aae6-41e6-ca43-884694ead50d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         date  value1  value2\n","0  2022-07-01       1       4\n","1  2022-07-02       2       5\n","2  2022-07-03       3       6\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# 예시 데이터프레임 생성\n","data1 = {'date': ['2022-07-01', '2022-07-02', '2022-07-03'],\n","         'value1': [1, 2, 3]}\n","data2 = {'date': ['2022-07-01', '2022-07-02', '2022-07-03'],\n","         'value2': [4, 5, 6]}\n","\n","df1 = pd.DataFrame(data1)\n","df2 = pd.DataFrame(data2)\n","\n","# 두 데이터프레임의 날짜 컬럼을 datetime64로 변환\n","df1['date'] = pd.to_datetime(df1['date'])\n","df2['date'] = pd.to_datetime(df2['date'])\n","\n","# Set the index as the 'date' column and drop the original 'date' column\n","df1.set_index('date', inplace=True)\n","df2.set_index('date', inplace=True)\n","\n","# Concatenate two DataFrames\n","concatenated_df = pd.concat([df1, df2], axis=1)\n","\n","# 결과 출력\n","print(concatenated_df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ot3udFqB4h72","executionInfo":{"status":"ok","timestamp":1689262374452,"user_tz":-540,"elapsed":334,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"9bcdbd55-e496-4020-8f1a-304e9b557192"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            value1  value2\n","date                      \n","2022-07-01       1       4\n","2022-07-02       2       5\n","2022-07-03       3       6\n"]}]},{"cell_type":"code","source":["# 대기질 데이터에 강우량 데이터 합치기\n","concatenated_test_df = pd.concat([gangnam_air, gangnam_rain_fall], axis=1)\n","concatenated_test_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"KHFT0iFlz5Pu","executionInfo":{"status":"ok","timestamp":1689262524340,"user_tz":-540,"elapsed":331,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"a5901308-c5ac-4d66-edd4-9d1ae6f4bed9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2   Gu  \\\n","24  2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040  강남구   \n","50  2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034  강남구   \n","76  2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034  강남구   \n","102 2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036  강남구   \n","128 2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038  강남구   \n","..         ...  ...   ...    ...     ...     ...   ...     ...  ...   \n","175        NaT  NaN   NaN    NaN     NaN     NaN   NaN     NaN  강남구   \n","176        NaT  NaN   NaN    NaN     NaN     NaN   NaN     NaN  강남구   \n","177        NaT  NaN   NaN    NaN     NaN     NaN   NaN     NaN  강남구   \n","178        NaT  NaN   NaN    NaN     NaN     NaN   NaN     NaN  강남구   \n","179        NaT  NaN   NaN    NaN     NaN     NaN   NaN     NaN  강남구   \n","\n","           Date  DailyRain  \n","24   2023-01-25        0.0  \n","50   2023-02-20        0.0  \n","76   2023-03-18        0.0  \n","102  2023-04-13        0.0  \n","128  2023-05-09        0.0  \n","..          ...        ...  \n","175  2023-06-25        0.0  \n","176  2023-06-26      113.5  \n","177  2023-06-27        5.0  \n","178  2023-06-28        0.0  \n","179  2023-06-29      157.5  \n","\n","[357 rows x 11 columns]"],"text/html":["\n","\n","  <div id=\"df-4a2e805e-e958-46b7-9ff8-18d9cf9d4619\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>Gu</th>\n","      <th>Date</th>\n","      <th>DailyRain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","      <td>강남구</td>\n","      <td>2023-01-25</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","      <td>강남구</td>\n","      <td>2023-02-20</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","      <td>강남구</td>\n","      <td>2023-03-18</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","      <td>강남구</td>\n","      <td>2023-04-13</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","      <td>강남구</td>\n","      <td>2023-05-09</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>강남구</td>\n","      <td>2023-06-25</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>강남구</td>\n","      <td>2023-06-26</td>\n","      <td>113.5</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>강남구</td>\n","      <td>2023-06-27</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>강남구</td>\n","      <td>2023-06-28</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>강남구</td>\n","      <td>2023-06-29</td>\n","      <td>157.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>357 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a2e805e-e958-46b7-9ff8-18d9cf9d4619')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-22719216-ff76-4bc4-98b3-5e7e912ca24b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22719216-ff76-4bc4-98b3-5e7e912ca24b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-22719216-ff76-4bc4-98b3-5e7e912ca24b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4a2e805e-e958-46b7-9ff8-18d9cf9d4619 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4a2e805e-e958-46b7-9ff8-18d9cf9d4619');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["#### concat이 잘 안돼서 merge를 쓰기 위해 datetime -> string으로 바꿔버리기 ####\n","import pandas as pd\n","\n","# 예시 데이터프레임 생성\n","data = {'date': ['2022-07-01', '2022-07-02', '2022-07-03']}\n","df = pd.DataFrame(data)\n","\n","# Object 형 컬럼을 datetime64로 변환\n","df['date'] = pd.to_datetime(df['date'])\n","\n","# datetime64 컬럼을 string으로 변환\n","df['date_str'] = df['date'].dt.strftime('%Y-%m-%d')\n","\n","# 결과 출력\n","print(df.dtypes)\n","print(df.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X6UkxX-n10Ds","executionInfo":{"status":"ok","timestamp":1689262815891,"user_tz":-540,"elapsed":331,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"97ff16ce-6bea-451d-9e2c-5cb72d469fe8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["date        datetime64[ns]\n","date_str            object\n","dtype: object\n","        date    date_str\n","0 2022-07-01  2022-07-01\n","1 2022-07-02  2022-07-02\n","2 2022-07-03  2022-07-03\n"]}]},{"cell_type":"code","source":["## gangnam_air, gangnam_rain_fall 얘네 바꾸기\n","\n","# gangnam_air['Date'] = gangnam_air['Date'].dt.strftime('%Y-%m-%d')\n","# gangnam_rain_fall['Date'] = gangnam_rain_fall['Date'].dt.strftime('%Y-%m-%d') -> 이미..저거임."],"metadata":{"id":"aO0GPjP-0xIs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# gangnam_foot_traffic['측정날짜'] = gangnam_foot_traffic['측정날짜'].dt.strftime('%Y-%m-%d')\n","gangnam_foot_traffic.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJ0RKxOv_PuN","executionInfo":{"status":"ok","timestamp":1689264249487,"user_tz":-540,"elapsed":373,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"e3f6b34d-66a0-492c-f0da-c21e07e2607f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["자치구      object\n","측정날짜     object\n","방문자수    float64\n","dtype: object"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["gangnam_air.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6qvrkIiT71O9","executionInfo":{"status":"ok","timestamp":1689263300467,"user_tz":-540,"elapsed":324,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"b450e2a1-3a6d-455b-f04c-d18c003138bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date      object\n","Gu        object\n","PM10     float64\n","PM2.5    float64\n","O3       float64\n","NO2      float64\n","CO       float64\n","SO2      float64\n","dtype: object"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["# import pandas as pd\n","\n","# # 예시 데이터프레임 생성\n","# data1 = {'date': ['2022-07-01', '2022-07-02', '2022-07-03'],'value1': [1, 2, 3]}\n","# data2 = {'date': ['2022-07-01', '2022-07-02', '2022-07-03'],'value2': [4, 5, 6]}\n","\n","# df1 = pd.DataFrame(data1)\n","# df2 = pd.DataFrame(data2)\n","\n","# # 날짜 컬럼을 기준으로 두 데이터프레임 합치기\n","# merged_df = pd.merge(df1, df2, on='date')\n","\n","# # 결과 출력\n","# print(merged_df)\n"],"metadata":{"id":"sQvee73I8Fw7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 대기질 데이터에 강우량 데이터 합치기 - merge 사용\n","merged_test_df = pd.merge(gangnam_air, gangnam_rain_fall, on='Date')\n","merged_test_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"0cuFMSsN8Ktd","executionInfo":{"status":"ok","timestamp":1689263829965,"user_tz":-540,"elapsed":502,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"9439d017-45e4-4a56-f0d2-56bfb24c9c1b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date Gu_x  PM10  PM2.5      O3     NO2    CO     SO2 Gu_y  \\\n","0    2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040  강남구   \n","1    2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034  강남구   \n","2    2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034  강남구   \n","3    2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036  강남구   \n","4    2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038  강남구   \n","..          ...  ...   ...    ...     ...     ...   ...     ...  ...   \n","176  2023-06-26  강남구  19.0   12.0  0.0282  0.0139  0.33  0.0030  강남구   \n","177  2023-06-27  강남구  18.0   12.0  0.0538  0.0111  0.31  0.0032  강남구   \n","178  2023-06-28  강남구  30.0   21.0  0.0507  0.0129  0.35  0.0030  강남구   \n","179  2023-06-29  강남구  33.0   23.0  0.0371  0.0140  0.34  0.0030  강남구   \n","180  2023-06-30  강남구  33.0   25.0  0.0478  0.0229  0.44  0.0030  강남구   \n","\n","     DailyRain  \n","0          0.0  \n","1          0.0  \n","2          0.0  \n","3          0.0  \n","4          0.0  \n","..         ...  \n","176      113.5  \n","177        5.0  \n","178        0.0  \n","179      157.5  \n","180        1.0  \n","\n","[181 rows x 10 columns]"],"text/html":["\n","\n","  <div id=\"df-08386e05-2cc8-45b4-b4a9-8ded2d3513d3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu_x</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>Gu_y</th>\n","      <th>DailyRain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","      <td>강남구</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","      <td>강남구</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","      <td>강남구</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","      <td>강남구</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","      <td>강남구</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>2023-06-26</td>\n","      <td>강남구</td>\n","      <td>19.0</td>\n","      <td>12.0</td>\n","      <td>0.0282</td>\n","      <td>0.0139</td>\n","      <td>0.33</td>\n","      <td>0.0030</td>\n","      <td>강남구</td>\n","      <td>113.5</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>2023-06-27</td>\n","      <td>강남구</td>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>0.0538</td>\n","      <td>0.0111</td>\n","      <td>0.31</td>\n","      <td>0.0032</td>\n","      <td>강남구</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>2023-06-28</td>\n","      <td>강남구</td>\n","      <td>30.0</td>\n","      <td>21.0</td>\n","      <td>0.0507</td>\n","      <td>0.0129</td>\n","      <td>0.35</td>\n","      <td>0.0030</td>\n","      <td>강남구</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>2023-06-29</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>23.0</td>\n","      <td>0.0371</td>\n","      <td>0.0140</td>\n","      <td>0.34</td>\n","      <td>0.0030</td>\n","      <td>강남구</td>\n","      <td>157.5</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>2023-06-30</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>25.0</td>\n","      <td>0.0478</td>\n","      <td>0.0229</td>\n","      <td>0.44</td>\n","      <td>0.0030</td>\n","      <td>강남구</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>181 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08386e05-2cc8-45b4-b4a9-8ded2d3513d3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-47163993-0855-4c91-8326-75de7f8f6dcc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47163993-0855-4c91-8326-75de7f8f6dcc')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-47163993-0855-4c91-8326-75de7f8f6dcc button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-08386e05-2cc8-45b4-b4a9-8ded2d3513d3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-08386e05-2cc8-45b4-b4a9-8ded2d3513d3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["merged_test_df.isnull().sum()\n","# null없음"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WiZOmc--9n_R","executionInfo":{"status":"ok","timestamp":1689263829965,"user_tz":-540,"elapsed":5,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"1edc83de-f8c9-4e8b-acba-169eef1292d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0\n","Gu_x         0\n","PM10         0\n","PM2.5        0\n","O3           0\n","NO2          0\n","CO           0\n","SO2          0\n","Gu_y         0\n","DailyRain    0\n","dtype: int64"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["merged_test_df = merged_test_df.drop('Gu_y', axis=1)\n","merged_test_df = merged_test_df.rename(columns={'Gu_x':'Gu'})\n","merged_test_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"-7-ZGdkL8KwY","executionInfo":{"status":"ok","timestamp":1689263830634,"user_tz":-540,"elapsed":4,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"1311afff-4b1b-492a-af7a-aaa9871db9c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain\n","0    2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040        0.0\n","1    2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034        0.0\n","2    2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034        0.0\n","3    2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036        0.0\n","4    2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038        0.0\n","..          ...  ...   ...    ...     ...     ...   ...     ...        ...\n","176  2023-06-26  강남구  19.0   12.0  0.0282  0.0139  0.33  0.0030      113.5\n","177  2023-06-27  강남구  18.0   12.0  0.0538  0.0111  0.31  0.0032        5.0\n","178  2023-06-28  강남구  30.0   21.0  0.0507  0.0129  0.35  0.0030        0.0\n","179  2023-06-29  강남구  33.0   23.0  0.0371  0.0140  0.34  0.0030      157.5\n","180  2023-06-30  강남구  33.0   25.0  0.0478  0.0229  0.44  0.0030        1.0\n","\n","[181 rows x 9 columns]"],"text/html":["\n","\n","  <div id=\"df-763505aa-1640-4f87-94c9-acfd2ef9ea95\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>2023-06-26</td>\n","      <td>강남구</td>\n","      <td>19.0</td>\n","      <td>12.0</td>\n","      <td>0.0282</td>\n","      <td>0.0139</td>\n","      <td>0.33</td>\n","      <td>0.0030</td>\n","      <td>113.5</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>2023-06-27</td>\n","      <td>강남구</td>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>0.0538</td>\n","      <td>0.0111</td>\n","      <td>0.31</td>\n","      <td>0.0032</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>2023-06-28</td>\n","      <td>강남구</td>\n","      <td>30.0</td>\n","      <td>21.0</td>\n","      <td>0.0507</td>\n","      <td>0.0129</td>\n","      <td>0.35</td>\n","      <td>0.0030</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>2023-06-29</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>23.0</td>\n","      <td>0.0371</td>\n","      <td>0.0140</td>\n","      <td>0.34</td>\n","      <td>0.0030</td>\n","      <td>157.5</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>2023-06-30</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>25.0</td>\n","      <td>0.0478</td>\n","      <td>0.0229</td>\n","      <td>0.44</td>\n","      <td>0.0030</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>181 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-763505aa-1640-4f87-94c9-acfd2ef9ea95')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e9a01d98-b644-4ccf-9d71-db909535b0a6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9a01d98-b644-4ccf-9d71-db909535b0a6')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e9a01d98-b644-4ccf-9d71-db909535b0a6 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-763505aa-1640-4f87-94c9-acfd2ef9ea95 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-763505aa-1640-4f87-94c9-acfd2ef9ea95');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["gangnam_foot_traffic = gangnam_foot_traffic.rename(columns={'측정날짜':'Date'})"],"metadata":{"id":"F6JaJoQEAJlT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1차로 합친 데이터에 VisitNum-유동인구 데이터 합치기 - merge 사용\n","merged_test_df2 = pd.merge(merged_test_df, gangnam_foot_traffic, on='Date')\n","merged_test_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"y9wfB2Cb_0fy","executionInfo":{"status":"ok","timestamp":1689264414913,"user_tz":-540,"elapsed":346,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"e541eb7d-b5c0-4125-9075-9ef9e5ab3bf3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain  \\\n","0    2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040        0.0   \n","1    2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034        0.0   \n","2    2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034        0.0   \n","3    2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036        0.0   \n","4    2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038        0.0   \n","..          ...  ...   ...    ...     ...     ...   ...     ...        ...   \n","162  2023-06-26  강남구  19.0   12.0  0.0282  0.0139  0.33  0.0030      113.5   \n","163  2023-06-27  강남구  18.0   12.0  0.0538  0.0111  0.31  0.0032        5.0   \n","164  2023-06-28  강남구  30.0   21.0  0.0507  0.0129  0.35  0.0030        0.0   \n","165  2023-06-29  강남구  33.0   23.0  0.0371  0.0140  0.34  0.0030      157.5   \n","166  2023-06-30  강남구  33.0   25.0  0.0478  0.0229  0.44  0.0030        1.0   \n","\n","            자치구      방문자수  \n","0    Gangnam-gu     443.0  \n","1    Gangnam-gu  106075.0  \n","2    Gangnam-gu  109680.0  \n","3    Gangnam-gu  113975.0  \n","4    Gangnam-gu  112966.0  \n","..          ...       ...  \n","162  Gangnam-gu  189449.0  \n","163  Gangnam-gu  190542.0  \n","164  Gangnam-gu  198236.0  \n","165  Gangnam-gu  193811.0  \n","166  Gangnam-gu  210722.0  \n","\n","[167 rows x 11 columns]"],"text/html":["\n","\n","  <div id=\"df-87d9dada-3988-4118-b505-aa02e484f118\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","      <th>자치구</th>\n","      <th>방문자수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","      <td>0.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>443.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>106075.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>109680.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","      <td>0.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>113975.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","      <td>0.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>112966.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>2023-06-26</td>\n","      <td>강남구</td>\n","      <td>19.0</td>\n","      <td>12.0</td>\n","      <td>0.0282</td>\n","      <td>0.0139</td>\n","      <td>0.33</td>\n","      <td>0.0030</td>\n","      <td>113.5</td>\n","      <td>Gangnam-gu</td>\n","      <td>189449.0</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>2023-06-27</td>\n","      <td>강남구</td>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>0.0538</td>\n","      <td>0.0111</td>\n","      <td>0.31</td>\n","      <td>0.0032</td>\n","      <td>5.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>190542.0</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>2023-06-28</td>\n","      <td>강남구</td>\n","      <td>30.0</td>\n","      <td>21.0</td>\n","      <td>0.0507</td>\n","      <td>0.0129</td>\n","      <td>0.35</td>\n","      <td>0.0030</td>\n","      <td>0.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>198236.0</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2023-06-29</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>23.0</td>\n","      <td>0.0371</td>\n","      <td>0.0140</td>\n","      <td>0.34</td>\n","      <td>0.0030</td>\n","      <td>157.5</td>\n","      <td>Gangnam-gu</td>\n","      <td>193811.0</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>2023-06-30</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>25.0</td>\n","      <td>0.0478</td>\n","      <td>0.0229</td>\n","      <td>0.44</td>\n","      <td>0.0030</td>\n","      <td>1.0</td>\n","      <td>Gangnam-gu</td>\n","      <td>210722.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>167 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87d9dada-3988-4118-b505-aa02e484f118')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e9dfb14a-06d6-4e3f-aad5-cd2e439da64e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9dfb14a-06d6-4e3f-aad5-cd2e439da64e')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e9dfb14a-06d6-4e3f-aad5-cd2e439da64e button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-87d9dada-3988-4118-b505-aa02e484f118 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-87d9dada-3988-4118-b505-aa02e484f118');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["merged_test_df2.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0unkLVhp_0jF","executionInfo":{"status":"ok","timestamp":1689264445385,"user_tz":-540,"elapsed":314,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"5fd48311-bcb6-41dd-ef48-d934130689e3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0\n","Gu           0\n","PM10         0\n","PM2.5        0\n","O3           0\n","NO2          0\n","CO           0\n","SO2          0\n","DailyRain    0\n","자치구          0\n","방문자수         0\n","dtype: int64"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["merged_test_df2 = merged_test_df2.drop('자치구', axis=1)\n","merged_test_df2 = merged_test_df2.rename(columns={'방문자수':'VisitNum'})\n","merged_test_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ncjEQqrq_0mi","executionInfo":{"status":"ok","timestamp":1689264532724,"user_tz":-540,"elapsed":355,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"1c15f775-a04d-4bf7-e951-11aff9764611"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain  \\\n","0    2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040        0.0   \n","1    2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034        0.0   \n","2    2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034        0.0   \n","3    2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036        0.0   \n","4    2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038        0.0   \n","..          ...  ...   ...    ...     ...     ...   ...     ...        ...   \n","162  2023-06-26  강남구  19.0   12.0  0.0282  0.0139  0.33  0.0030      113.5   \n","163  2023-06-27  강남구  18.0   12.0  0.0538  0.0111  0.31  0.0032        5.0   \n","164  2023-06-28  강남구  30.0   21.0  0.0507  0.0129  0.35  0.0030        0.0   \n","165  2023-06-29  강남구  33.0   23.0  0.0371  0.0140  0.34  0.0030      157.5   \n","166  2023-06-30  강남구  33.0   25.0  0.0478  0.0229  0.44  0.0030        1.0   \n","\n","     VisitNum  \n","0       443.0  \n","1    106075.0  \n","2    109680.0  \n","3    113975.0  \n","4    112966.0  \n","..        ...  \n","162  189449.0  \n","163  190542.0  \n","164  198236.0  \n","165  193811.0  \n","166  210722.0  \n","\n","[167 rows x 10 columns]"],"text/html":["\n","\n","  <div id=\"df-6d92ee54-44dd-494c-bffc-084068c9c0e0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","      <th>VisitNum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","      <td>0.0</td>\n","      <td>443.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","      <td>106075.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","      <td>109680.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","      <td>0.0</td>\n","      <td>113975.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","      <td>0.0</td>\n","      <td>112966.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>2023-06-26</td>\n","      <td>강남구</td>\n","      <td>19.0</td>\n","      <td>12.0</td>\n","      <td>0.0282</td>\n","      <td>0.0139</td>\n","      <td>0.33</td>\n","      <td>0.0030</td>\n","      <td>113.5</td>\n","      <td>189449.0</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>2023-06-27</td>\n","      <td>강남구</td>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>0.0538</td>\n","      <td>0.0111</td>\n","      <td>0.31</td>\n","      <td>0.0032</td>\n","      <td>5.0</td>\n","      <td>190542.0</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>2023-06-28</td>\n","      <td>강남구</td>\n","      <td>30.0</td>\n","      <td>21.0</td>\n","      <td>0.0507</td>\n","      <td>0.0129</td>\n","      <td>0.35</td>\n","      <td>0.0030</td>\n","      <td>0.0</td>\n","      <td>198236.0</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2023-06-29</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>23.0</td>\n","      <td>0.0371</td>\n","      <td>0.0140</td>\n","      <td>0.34</td>\n","      <td>0.0030</td>\n","      <td>157.5</td>\n","      <td>193811.0</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>2023-06-30</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>25.0</td>\n","      <td>0.0478</td>\n","      <td>0.0229</td>\n","      <td>0.44</td>\n","      <td>0.0030</td>\n","      <td>1.0</td>\n","      <td>210722.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>167 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d92ee54-44dd-494c-bffc-084068c9c0e0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-31591780-dd0b-44b1-8d8a-04fbb725c466\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31591780-dd0b-44b1-8d8a-04fbb725c466')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-31591780-dd0b-44b1-8d8a-04fbb725c466 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6d92ee54-44dd-494c-bffc-084068c9c0e0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6d92ee54-44dd-494c-bffc-084068c9c0e0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":120}]},{"cell_type":"markdown","source":["# 여러 구들을 합쳐야 하니까 코드 일단 하나로 합치기"],"metadata":{"id":"lfjeH7SYOR6n"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"zgTSdBXMPHZU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 초기 데이터 불러오기\n","foot_traffic_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/merged_foot_traffic.csv')\n","rain_fall_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/RainFall_final.csv')\n","air_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/seoul_air.csv')\n","air_df_origin = air_df_origin.drop('Unnamed: 0', axis=1)\n","\n","mapping_dict = {\n","  'Jongno-gu': '종로구',\n","  'Jung-gu': '중구',\n","  'Yongsan-gu': '용산구',\n","  'Seongdong-gu': '성동구',\n","  'Gwangjin-gu': '광진구',\n","  'Dongdaemun-gu': '동대문구',\n","  'Jungnang-gu': '중랑구',\n","  'Seongbuk-gu': '성북구',\n","  'Gangbuk-gu': '강북구',\n","  'Dobong-gu': '도봉구',\n","  'Nowon-gu': '노원구',\n","  'Eunpyeong-gu': '은평구',\n","  'Seodaemun-gu': '서대문구',\n","  'Mapo-gu': '마포구',\n","  'Yangcheon-gu': '양천구',\n","  'Gangseo-gu': '강서구',\n","  'Guro-gu': '구로구',\n","  'Geumcheon-gu': '금천구',\n","  'Yeongdeungpo-gu': '영등포구',\n","  'Dongjak-gu': '동작구',\n","  'Gwanak-gu': '관악구',\n","  'Seocho-gu': '서초구',\n","  'Gangnam-gu': '강남구',\n","  'Songpa-gu': '송파구',\n","  'Gangdong-gu': '강동구'\n","}\n","foot_traffic_df_origin['자치구'] = foot_traffic_df_origin['자치구'].map(mapping_dict)\n","# foot_traffic_df_origin.isnull().sum() # 170개의 nan 값\n","\n","# nan값이 포함된 행 제거\n","foot_traffic_df_origin = foot_traffic_df_origin.dropna()\n","foot_traffic_df_origin"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"npNOHz_GUmWK","executionInfo":{"status":"ok","timestamp":1689270127154,"user_tz":-540,"elapsed":1210,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"1f87c412-6f1c-40e0-d411-49a8f3133aff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      자치구        측정날짜      방문자수\n","0     도봉구  2023-01-01     832.0\n","1     은평구  2023-01-01       8.0\n","2     양천구  2023-01-01     555.0\n","3     강북구  2023-01-01     457.0\n","4     송파구  2023-01-01     122.0\n","...   ...         ...       ...\n","3503  도봉구  2023-07-02  102641.0\n","3504  금천구  2023-07-02   67371.0\n","3505  노원구  2023-07-02   70257.0\n","3507  종로구  2023-07-02   28642.0\n","3508  용산구  2023-07-02      51.0\n","\n","[3339 rows x 3 columns]"],"text/html":["\n","\n","  <div id=\"df-b27cfd6a-4bbb-4776-8f71-4f69fc021a14\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>자치구</th>\n","      <th>측정날짜</th>\n","      <th>방문자수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>도봉구</td>\n","      <td>2023-01-01</td>\n","      <td>832.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>은평구</td>\n","      <td>2023-01-01</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>양천구</td>\n","      <td>2023-01-01</td>\n","      <td>555.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강북구</td>\n","      <td>2023-01-01</td>\n","      <td>457.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>송파구</td>\n","      <td>2023-01-01</td>\n","      <td>122.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3503</th>\n","      <td>도봉구</td>\n","      <td>2023-07-02</td>\n","      <td>102641.0</td>\n","    </tr>\n","    <tr>\n","      <th>3504</th>\n","      <td>금천구</td>\n","      <td>2023-07-02</td>\n","      <td>67371.0</td>\n","    </tr>\n","    <tr>\n","      <th>3505</th>\n","      <td>노원구</td>\n","      <td>2023-07-02</td>\n","      <td>70257.0</td>\n","    </tr>\n","    <tr>\n","      <th>3507</th>\n","      <td>종로구</td>\n","      <td>2023-07-02</td>\n","      <td>28642.0</td>\n","    </tr>\n","    <tr>\n","      <th>3508</th>\n","      <td>용산구</td>\n","      <td>2023-07-02</td>\n","      <td>51.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3339 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b27cfd6a-4bbb-4776-8f71-4f69fc021a14')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-dd55f6b5-a481-40ed-89eb-e130e47923ae\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd55f6b5-a481-40ed-89eb-e130e47923ae')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-dd55f6b5-a481-40ed-89eb-e130e47923ae button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b27cfd6a-4bbb-4776-8f71-4f69fc021a14 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b27cfd6a-4bbb-4776-8f71-4f69fc021a14');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["def make_test_df(GuName):\n","\n","  foot_traffic_df = foot_traffic_df_origin.copy()\n","  rain_fall_df = rain_fall_df_origin.copy()\n","  rain_fall_grouped_df = rain_fall_df.groupby(['Gu', 'Date']).agg({'DailyRain': 'sum'}).reset_index()\n","\n","  # GuName의 데이터\n","  gangnam_foot_traffic = foot_traffic_df[foot_traffic_df['자치구'] == GuName]\n","  gangnam_rain_fall = rain_fall_grouped_df[rain_fall_grouped_df['Gu'] == GuName]\n","  gangnam_air = air_df_origin[air_df_origin['Gu'] == GuName]\n","\n","  # 대기질 데이터에 강우량 데이터 합치기\n","\n","  #### concat이 잘 안돼서 merge를 쓰기 위해 datetime -> string으로 바꿔버리기 ####\n","  ## gangnam_air, gangnam_rain_fall, gangnam_foot_traffic의 각 날짜 타입 바꾸기\n","  # gangnam_air['Date'] = gangnam_air['Date'].dt.strftime('%Y-%m-%d')\n","  # gangnam_rain_fall['Date'] = gangnam_rain_fall['Date'].dt.strftime('%Y-%m-%d') -> 이미..저거임.\n","  # gangnam_foot_traffic['측정날짜'] = gangnam_foot_traffic['측정날짜'].dt.strftime('%Y-%m-%d')\n","  # gangnam_foot_traffic.dtypes\n","\n","  # 대기질 데이터에 강우량 데이터 합치기 - merge 사용\n","  merged_test_df = pd.merge(gangnam_air, gangnam_rain_fall, on='Date')\n","  # merged_test_df\n","  # merged_test_df.isnull().sum()\n","  # null없음\n","\n","  # 중복 컬럼 삭제, 컬럼이름 변경\n","  merged_test_df = merged_test_df.drop('Gu_y', axis=1)\n","  merged_test_df = merged_test_df.rename(columns={'Gu_x':'Gu'})\n","  # merged_test_df\n","  gangnam_foot_traffic = gangnam_foot_traffic.rename(columns={'측정날짜':'Date'})\n","\n","  # 1차로 합친 데이터에 VisitNum-유동인구 데이터 합치기 - merge 사용\n","  merged_test_df2 = pd.merge(merged_test_df, gangnam_foot_traffic, on='Date')\n","  # merged_test_df2\n","  # merged_test_df2.isnull().sum()\n","  # null없음\n","\n","  # 중복 컬럼 삭제, 컬럼이름 변경\n","  merged_test_df2 = merged_test_df2.drop('자치구', axis=1)\n","  merged_test_df2 = merged_test_df2.rename(columns={'방문자수':'VisitNum'})\n","  return merged_test_df2"],"metadata":{"id":"GwgYSh5_Q5W_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["unique_values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4wpkFGW-Zovr","executionInfo":{"status":"ok","timestamp":1689271051031,"user_tz":-540,"elapsed":3,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"c32298a8-a171-485e-ad59-4d5c9ea3530c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['도봉구',\n"," '은평구',\n"," '양천구',\n"," '강북구',\n"," '송파구',\n"," '강동구',\n"," '강남구',\n"," '강서구',\n"," '성동구',\n"," '금천구',\n"," '서대문구',\n"," '구로구',\n"," '서초구',\n"," '관악구',\n"," '노원구',\n"," '광진구',\n"," '마포구',\n"," '종로구',\n"," '중구',\n"," '용산구',\n"," '동작구',\n"," '중랑구']"]},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["# 각 구별로 데이터 저장 -> 한df에 합칠거임\n","unique_values = foot_traffic_df_origin['자치구'].unique().tolist()\n","df1 = make_test_df(unique_values[0])"],"metadata":{"id":"7YHay8qaWz8N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(1, len(unique_values)):\n","  df2 = make_test_df(unique_values[i])\n","  # 두 데이터프레임을 행 단위로 이어붙이기\n","  df1 = pd.concat([df1, df2], ignore_index=True)"],"metadata":{"id":"Jy5FR0nQXbDr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1"],"metadata":{"id":"-eR2KiWBWYCZ","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1689271087273,"user_tz":-540,"elapsed":17,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"92ac172c-30c6-4245-95a4-23e0e865720b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain  \\\n","0     2023-01-02  도봉구  21.0   10.0  0.0287  0.0130  0.38  0.0028        0.0   \n","1     2023-01-03  도봉구  26.0   15.0  0.0194  0.0259  0.54  0.0025        0.0   \n","2     2023-01-04  도봉구  28.0   20.0  0.0176  0.0333  0.62  0.0026        0.0   \n","3     2023-01-05  도봉구  45.0   33.0  0.0107  0.0445  0.80  0.0028        0.0   \n","4     2023-01-06  도봉구  66.0   54.0  0.0109  0.0453  0.88  0.0028        0.0   \n","...          ...  ...   ...    ...     ...     ...   ...     ...        ...   \n","3251  2023-06-26  중랑구  17.0   11.0  0.0277  0.0178  0.31  0.0022       65.0   \n","3252  2023-06-27  중랑구  37.0   11.0  0.0465  0.0174  0.32  0.0022        2.0   \n","3253  2023-06-28  중랑구  35.0   21.0  0.0473  0.0204  0.37  0.0023        0.0   \n","3254  2023-06-29  중랑구  33.0   22.0  0.0328  0.0198  0.31  0.0021      133.5   \n","3255  2023-06-30  중랑구  35.0   25.0  0.0462  0.0260  0.41  0.0022        0.0   \n","\n","      VisitNum  \n","0     120956.0  \n","1     118727.0  \n","2     114711.0  \n","3     119399.0  \n","4     123182.0  \n","...        ...  \n","3251   39284.0  \n","3252   41083.0  \n","3253   41516.0  \n","3254   39480.0  \n","3255   40893.0  \n","\n","[3256 rows x 10 columns]"],"text/html":["\n","\n","  <div id=\"df-37359e02-184b-45fe-865c-eccd4b74aced\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","      <th>VisitNum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-02</td>\n","      <td>도봉구</td>\n","      <td>21.0</td>\n","      <td>10.0</td>\n","      <td>0.0287</td>\n","      <td>0.0130</td>\n","      <td>0.38</td>\n","      <td>0.0028</td>\n","      <td>0.0</td>\n","      <td>120956.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-03</td>\n","      <td>도봉구</td>\n","      <td>26.0</td>\n","      <td>15.0</td>\n","      <td>0.0194</td>\n","      <td>0.0259</td>\n","      <td>0.54</td>\n","      <td>0.0025</td>\n","      <td>0.0</td>\n","      <td>118727.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-04</td>\n","      <td>도봉구</td>\n","      <td>28.0</td>\n","      <td>20.0</td>\n","      <td>0.0176</td>\n","      <td>0.0333</td>\n","      <td>0.62</td>\n","      <td>0.0026</td>\n","      <td>0.0</td>\n","      <td>114711.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-05</td>\n","      <td>도봉구</td>\n","      <td>45.0</td>\n","      <td>33.0</td>\n","      <td>0.0107</td>\n","      <td>0.0445</td>\n","      <td>0.80</td>\n","      <td>0.0028</td>\n","      <td>0.0</td>\n","      <td>119399.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-06</td>\n","      <td>도봉구</td>\n","      <td>66.0</td>\n","      <td>54.0</td>\n","      <td>0.0109</td>\n","      <td>0.0453</td>\n","      <td>0.88</td>\n","      <td>0.0028</td>\n","      <td>0.0</td>\n","      <td>123182.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3251</th>\n","      <td>2023-06-26</td>\n","      <td>중랑구</td>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>0.0277</td>\n","      <td>0.0178</td>\n","      <td>0.31</td>\n","      <td>0.0022</td>\n","      <td>65.0</td>\n","      <td>39284.0</td>\n","    </tr>\n","    <tr>\n","      <th>3252</th>\n","      <td>2023-06-27</td>\n","      <td>중랑구</td>\n","      <td>37.0</td>\n","      <td>11.0</td>\n","      <td>0.0465</td>\n","      <td>0.0174</td>\n","      <td>0.32</td>\n","      <td>0.0022</td>\n","      <td>2.0</td>\n","      <td>41083.0</td>\n","    </tr>\n","    <tr>\n","      <th>3253</th>\n","      <td>2023-06-28</td>\n","      <td>중랑구</td>\n","      <td>35.0</td>\n","      <td>21.0</td>\n","      <td>0.0473</td>\n","      <td>0.0204</td>\n","      <td>0.37</td>\n","      <td>0.0023</td>\n","      <td>0.0</td>\n","      <td>41516.0</td>\n","    </tr>\n","    <tr>\n","      <th>3254</th>\n","      <td>2023-06-29</td>\n","      <td>중랑구</td>\n","      <td>33.0</td>\n","      <td>22.0</td>\n","      <td>0.0328</td>\n","      <td>0.0198</td>\n","      <td>0.31</td>\n","      <td>0.0021</td>\n","      <td>133.5</td>\n","      <td>39480.0</td>\n","    </tr>\n","    <tr>\n","      <th>3255</th>\n","      <td>2023-06-30</td>\n","      <td>중랑구</td>\n","      <td>35.0</td>\n","      <td>25.0</td>\n","      <td>0.0462</td>\n","      <td>0.0260</td>\n","      <td>0.41</td>\n","      <td>0.0022</td>\n","      <td>0.0</td>\n","      <td>40893.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3256 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37359e02-184b-45fe-865c-eccd4b74aced')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-fe2dbda5-0e94-4095-9fad-0ec6d1a08173\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe2dbda5-0e94-4095-9fad-0ec6d1a08173')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-fe2dbda5-0e94-4095-9fad-0ec6d1a08173 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-37359e02-184b-45fe-865c-eccd4b74aced button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-37359e02-184b-45fe-865c-eccd4b74aced');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["df1.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-rOtXBmLZ2Wj","executionInfo":{"status":"ok","timestamp":1689271125309,"user_tz":-540,"elapsed":3,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"594fa910-9262-4b2b-cb55-03171ad9fe01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date          0\n","Gu            0\n","PM10         45\n","PM2.5        39\n","O3           39\n","NO2          42\n","CO           98\n","SO2          73\n","DailyRain     0\n","VisitNum      0\n","dtype: int64"]},"metadata":{},"execution_count":164}]},{"cell_type":"code","source":["# nan값이 포함된 행 제거\n","df1 = df1.dropna()\n","df1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5NSCxgWeaICP","executionInfo":{"status":"ok","timestamp":1689271586814,"user_tz":-540,"elapsed":497,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"5fb17e71-454b-473f-bf8c-c76ad33d4571"},"execution_count":167,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3123 entries, 0 to 3255\n","Data columns (total 10 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   Date       3123 non-null   object \n"," 1   Gu         3123 non-null   object \n"," 2   PM10       3123 non-null   float64\n"," 3   PM2.5      3123 non-null   float64\n"," 4   O3         3123 non-null   float64\n"," 5   NO2        3123 non-null   float64\n"," 6   CO         3123 non-null   float64\n"," 7   SO2        3123 non-null   float64\n"," 8   DailyRain  3123 non-null   float64\n"," 9   VisitNum   3123 non-null   float64\n","dtypes: float64(8), object(2)\n","memory usage: 268.4+ KB\n"]}]},{"cell_type":"code","source":["df1.to_csv('test.csv')"],"metadata":{"id":"C8BXXKx1Z2aF","executionInfo":{"status":"ok","timestamp":1689271591635,"user_tz":-540,"elapsed":2,"user":{"displayName":"신진영","userId":"04497995254913851370"}}},"execution_count":168,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"DZS3FLWLaYRk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 초기 데이터 불러오기\n","foot_traffic_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/merged_foot_traffic.csv')\n","rain_fall_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/RainFall_final.csv')\n","air_df_origin = pd.read_csv('/content/drive/MyDrive/SWING/HOMERUN/seoul_air.csv')\n","air_df_origin = air_df_origin.drop('Unnamed: 0', axis=1)\n","\n","foot_traffic_df = foot_traffic_df_origin.copy()\n","rain_fall_df = rain_fall_df_origin.copy()\n","rain_fall_grouped_df = rain_fall_df.groupby(['Gu', 'Date']).agg({'DailyRain': 'sum'}).reset_index()\n","\n","# 강남구의 데이터\n","gangnam_foot_traffic = foot_traffic_df[foot_traffic_df['자치구'] == 'Gangnam-gu']\n","gangnam_rain_fall = rain_fall_grouped_df[rain_fall_grouped_df['Gu'] == '강남구']\n","gangnam_air = air_df_origin[air_df_origin['Gu'] == '강남구']\n","\n","# 대기질 데이터에 강우량 데이터 합치기\n","\n","#### concat이 잘 안돼서 merge를 쓰기 위해 datetime -> string으로 바꿔버리기 ####\n","## gangnam_air, gangnam_rain_fall, gangnam_foot_traffic의 각 날짜 타입 바꾸기\n","# gangnam_air['Date'] = gangnam_air['Date'].dt.strftime('%Y-%m-%d')\n","# gangnam_rain_fall['Date'] = gangnam_rain_fall['Date'].dt.strftime('%Y-%m-%d') -> 이미..저거임.\n","# gangnam_foot_traffic['측정날짜'] = gangnam_foot_traffic['측정날짜'].dt.strftime('%Y-%m-%d')\n","# gangnam_foot_traffic.dtypes\n","\n","# 대기질 데이터에 강우량 데이터 합치기 - merge 사용\n","merged_test_df = pd.merge(gangnam_air, gangnam_rain_fall, on='Date')\n","# merged_test_df\n","# merged_test_df.isnull().sum()\n","# null없음\n","\n","# 중복 컬럼 삭제, 컬럼이름 변경\n","merged_test_df = merged_test_df.drop('Gu_y', axis=1)\n","merged_test_df = merged_test_df.rename(columns={'Gu_x':'Gu'})\n","# merged_test_df\n","gangnam_foot_traffic = gangnam_foot_traffic.rename(columns={'측정날짜':'Date'})\n","\n","# 1차로 합친 데이터에 VisitNum-유동인구 데이터 합치기 - merge 사용\n","merged_test_df2 = pd.merge(merged_test_df, gangnam_foot_traffic, on='Date')\n","# merged_test_df2\n","# merged_test_df2.isnull().sum()\n","# null없음\n","\n","# 중복 컬럼 삭제, 컬럼이름 변경\n","merged_test_df2 = merged_test_df2.drop('자치구', axis=1)\n","merged_test_df2 = merged_test_df2.rename(columns={'방문자수':'VisitNum'})\n","merged_test_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"VXxmOYouOc8P","executionInfo":{"status":"ok","timestamp":1689268524577,"user_tz":-540,"elapsed":1130,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"7c786cdc-37bd-4bed-d255-0645781dd7b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date   Gu  PM10  PM2.5      O3     NO2    CO     SO2  DailyRain  \\\n","0    2023-01-01  강남구  52.0   36.0  0.0240  0.0240  0.60  0.0040        0.0   \n","1    2023-01-02  강남구  24.0   11.0  0.0212  0.0206  0.43  0.0034        0.0   \n","2    2023-01-03  강남구  29.0   15.0  0.0162  0.0303  0.51  0.0034        0.0   \n","3    2023-01-04  강남구  35.0   22.0  0.0111  0.0412  0.61  0.0036        0.0   \n","4    2023-01-05  강남구  47.0   32.0  0.0056  0.0523  0.80  0.0038        0.0   \n","..          ...  ...   ...    ...     ...     ...   ...     ...        ...   \n","162  2023-06-26  강남구  19.0   12.0  0.0282  0.0139  0.33  0.0030      113.5   \n","163  2023-06-27  강남구  18.0   12.0  0.0538  0.0111  0.31  0.0032        5.0   \n","164  2023-06-28  강남구  30.0   21.0  0.0507  0.0129  0.35  0.0030        0.0   \n","165  2023-06-29  강남구  33.0   23.0  0.0371  0.0140  0.34  0.0030      157.5   \n","166  2023-06-30  강남구  33.0   25.0  0.0478  0.0229  0.44  0.0030        1.0   \n","\n","     VisitNum  \n","0       443.0  \n","1    106075.0  \n","2    109680.0  \n","3    113975.0  \n","4    112966.0  \n","..        ...  \n","162  189449.0  \n","163  190542.0  \n","164  198236.0  \n","165  193811.0  \n","166  210722.0  \n","\n","[167 rows x 10 columns]"],"text/html":["\n","\n","  <div id=\"df-cf33fd7c-7ba5-463a-ab49-2dedffb30782\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gu</th>\n","      <th>PM10</th>\n","      <th>PM2.5</th>\n","      <th>O3</th>\n","      <th>NO2</th>\n","      <th>CO</th>\n","      <th>SO2</th>\n","      <th>DailyRain</th>\n","      <th>VisitNum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-01</td>\n","      <td>강남구</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>0.0240</td>\n","      <td>0.0240</td>\n","      <td>0.60</td>\n","      <td>0.0040</td>\n","      <td>0.0</td>\n","      <td>443.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-02</td>\n","      <td>강남구</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>0.0212</td>\n","      <td>0.0206</td>\n","      <td>0.43</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","      <td>106075.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-03</td>\n","      <td>강남구</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>0.0162</td>\n","      <td>0.0303</td>\n","      <td>0.51</td>\n","      <td>0.0034</td>\n","      <td>0.0</td>\n","      <td>109680.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-04</td>\n","      <td>강남구</td>\n","      <td>35.0</td>\n","      <td>22.0</td>\n","      <td>0.0111</td>\n","      <td>0.0412</td>\n","      <td>0.61</td>\n","      <td>0.0036</td>\n","      <td>0.0</td>\n","      <td>113975.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-05</td>\n","      <td>강남구</td>\n","      <td>47.0</td>\n","      <td>32.0</td>\n","      <td>0.0056</td>\n","      <td>0.0523</td>\n","      <td>0.80</td>\n","      <td>0.0038</td>\n","      <td>0.0</td>\n","      <td>112966.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>2023-06-26</td>\n","      <td>강남구</td>\n","      <td>19.0</td>\n","      <td>12.0</td>\n","      <td>0.0282</td>\n","      <td>0.0139</td>\n","      <td>0.33</td>\n","      <td>0.0030</td>\n","      <td>113.5</td>\n","      <td>189449.0</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>2023-06-27</td>\n","      <td>강남구</td>\n","      <td>18.0</td>\n","      <td>12.0</td>\n","      <td>0.0538</td>\n","      <td>0.0111</td>\n","      <td>0.31</td>\n","      <td>0.0032</td>\n","      <td>5.0</td>\n","      <td>190542.0</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>2023-06-28</td>\n","      <td>강남구</td>\n","      <td>30.0</td>\n","      <td>21.0</td>\n","      <td>0.0507</td>\n","      <td>0.0129</td>\n","      <td>0.35</td>\n","      <td>0.0030</td>\n","      <td>0.0</td>\n","      <td>198236.0</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2023-06-29</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>23.0</td>\n","      <td>0.0371</td>\n","      <td>0.0140</td>\n","      <td>0.34</td>\n","      <td>0.0030</td>\n","      <td>157.5</td>\n","      <td>193811.0</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>2023-06-30</td>\n","      <td>강남구</td>\n","      <td>33.0</td>\n","      <td>25.0</td>\n","      <td>0.0478</td>\n","      <td>0.0229</td>\n","      <td>0.44</td>\n","      <td>0.0030</td>\n","      <td>1.0</td>\n","      <td>210722.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>167 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf33fd7c-7ba5-463a-ab49-2dedffb30782')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-8afe1966-f11d-413b-8fe9-bec707b294a1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8afe1966-f11d-413b-8fe9-bec707b294a1')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-8afe1966-f11d-413b-8fe9-bec707b294a1 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf33fd7c-7ba5-463a-ab49-2dedffb30782 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf33fd7c-7ba5-463a-ab49-2dedffb30782');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["# merged_test_df2.to_csv('test.csv')"],"metadata":{"id":"l_7cMcPx8F7M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"IU2kUyolIbRy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"jo-zugZP-vnb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 강남구 대기질 뽑은거 확인 -> 총183일 전부 날짜 있음\n","unique_values = gangnam_air['Date'].unique()\n","# len(unique_values)\n","# unique_values\n","gangnam_air['Date'] = pd.to_datetime(gangnam_air['Date'])\n","gangnam_air.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RinugwYVtpZk","executionInfo":{"status":"ok","timestamp":1689260681316,"user_tz":-540,"elapsed":364,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"f58537cf-1e38-4c7a-c519-80dbc84f3d4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 183 entries, 24 to 4756\n","Data columns (total 8 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   Date    183 non-null    datetime64[ns]\n"," 1   Gu      183 non-null    object        \n"," 2   PM10    183 non-null    float64       \n"," 3   PM2.5   183 non-null    float64       \n"," 4   O3      183 non-null    float64       \n"," 5   NO2     183 non-null    float64       \n"," 6   CO      183 non-null    float64       \n"," 7   SO2     183 non-null    float64       \n","dtypes: datetime64[ns](1), float64(6), object(1)\n","memory usage: 12.9+ KB\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-75-3cea7b02cc39>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  gangnam_air['Date'] = pd.to_datetime(gangnam_air['Date'])\n"]}]},{"cell_type":"code","source":["# 강남구 유동인구 뽑은거 확인 -> 총183일중에 168개 날짜 있음\n","unique_values = gangnam_foot_traffic['측정날짜'].unique()\n","# len(unique_values)\n","# unique_values\n","gangnam_foot_traffic.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"akISjqdGO1Nr","executionInfo":{"status":"ok","timestamp":1689259630709,"user_tz":-540,"elapsed":512,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"70d6d106-927d-4e2a-9665-907330899aac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 169 entries, 7 to 3496\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   자치구     169 non-null    object        \n"," 1   측정날짜    169 non-null    datetime64[ns]\n"," 2   방문자수    169 non-null    float64       \n","dtypes: datetime64[ns](1), float64(1), object(1)\n","memory usage: 5.3+ KB\n"]}]},{"cell_type":"code","source":["# 강남구 강우량 뽑은거 확인 -> 총181일 전부 데이터 있음\n","unique_values = gangnam_rain_fall['Date'].unique()\n","# len(unique_values)\n","# unique_values\n","gangnam_rain_fall.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"NW0hNNDOPxQH","executionInfo":{"status":"ok","timestamp":1689262668275,"user_tz":-540,"elapsed":363,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"21fc985d-d602-4e0e-b333-219d1db34039"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Gu        Date  DailyRain\n","176  강남구  2023-06-26      113.5\n","177  강남구  2023-06-27        5.0\n","178  강남구  2023-06-28        0.0\n","179  강남구  2023-06-29      157.5\n","180  강남구  2023-06-30        1.0"],"text/html":["\n","\n","  <div id=\"df-fc8b100a-0a18-42f1-b364-4d4c2abc34ea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gu</th>\n","      <th>Date</th>\n","      <th>DailyRain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>176</th>\n","      <td>강남구</td>\n","      <td>2023-06-26</td>\n","      <td>113.5</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>강남구</td>\n","      <td>2023-06-27</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>강남구</td>\n","      <td>2023-06-28</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>강남구</td>\n","      <td>2023-06-29</td>\n","      <td>157.5</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>강남구</td>\n","      <td>2023-06-30</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc8b100a-0a18-42f1-b364-4d4c2abc34ea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e217303f-44c1-444a-bd97-08c0fd7d966e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e217303f-44c1-444a-bd97-08c0fd7d966e')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e217303f-44c1-444a-bd97-08c0fd7d966e button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc8b100a-0a18-42f1-b364-4d4c2abc34ea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc8b100a-0a18-42f1-b364-4d4c2abc34ea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["# gangnam_foot_traffic['측정날짜'] = pd.to_datetime(gangnam_foot_traffic['측정날짜'])\n","# gangnam_rain_fall['Date'] = pd.to_datetime(gangnam_rain_fall['Date']) => 이미 바뀌어 있음\n","\n","# 6월만 자르기\n","Jun_gangnam_foot_traffic = gangnam_foot_traffic[(gangnam_foot_traffic['측정날짜'] >= '2023-06-01') & (gangnam_foot_traffic['측정날짜'] <= '2023-06-30')].reset_index(drop=True)\n","Jun_gangnam_rain_fall = gangnam_rain_fall[(gangnam_rain_fall['Date'] >= '2023-06-01') & (gangnam_rain_fall['Date'] <= '2023-06-30')].reset_index(drop=True)\n","# Jun_gangnam_foot_traffic.tail()\n","# Jun_gangnam_rain_fall.tail()"],"metadata":{"id":"ZtQFB1uNP2gE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## 6월 강남구 유동인구 6월 강남구 강우량 데이터 상관계수\n","import numpy as np\n","from scipy.stats import pearsonr\n","\n","# 6월 강남구 유동인구 데이터\n","population = Jun_gangnam_foot_traffic['방문자수'].tolist()\n","# 6월 강남구 강우량 데이터\n","rainfall = Jun_gangnam_rain_fall['DailyRain'].tolist()\n","\n","# 상관 계수 계산\n","correlation_coefficient, p_value = pearsonr(rainfall, population)\n","\n","print(\"상관 계수:\", correlation_coefficient)\n","print(\"p-value:\", p_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1mGM4QqJUOyo","executionInfo":{"status":"ok","timestamp":1689267751891,"user_tz":-540,"elapsed":359,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"ebec6995-e655-42ae-c513-78f1e36b9101"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["상관 계수: 0.22148399661467244\n","p-value: 0.23949527456200992\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"yDfm-R7wU_QY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## 상관계수 테스트코드\n","\n","import numpy as np\n","from scipy.stats import pearsonr\n","\n","# 월별 강우량 데이터\n","rainfall = [50, 45, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150]\n","\n","# 월별 유동인구 데이터\n","population = [1000, 1100, 1050, 1200, 1300, 1500, 1400, 1600, 1700, 1800, 1900, 2000]\n","\n","# 상관 계수 계산\n","correlation_coefficient, p_value = pearsonr(rainfall, population)\n","\n","print(\"상관 계수:\", correlation_coefficient)\n","print(\"p-value:\", p_value)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jMnjFLKINs-1","executionInfo":{"status":"ok","timestamp":1689251449195,"user_tz":-540,"elapsed":359,"user":{"displayName":"신진영","userId":"04497995254913851370"}},"outputId":"5e3a5b9b-b8d6-412b-adb1-c3ccc6707998"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["상관 계수: 0.9839973531684383\n","p-value: 8.04620572596191e-09\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"r7lmozvnLBap"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 일별 유동인구 증가량 계산\n","foot_traffic_df['증감률'] = 0  # 증감률 컬럼 초기화\n","for i in range(1, len(foot_traffic_df)):\n","  prev_visitor = foot_traffic_df.iloc[i-1, foot_traffic_df.columns.get_loc('방문자수')]\n","  curr_visitor = foot_traffic_df.iloc[i, foot_traffic_df.columns.get_loc('방문자수')]\n","  rate = (curr_visitor - prev_visitor) / prev_visitor\n","  if rate >= 50 :\n","    foot_traffic_df.iloc[i, foot_traffic_df.columns.get_loc('증감률')] = 50\n","  else :\n","    foot_traffic_df.iloc[i, foot_traffic_df.columns.get_loc('증감률')] = rate\n","\n","# 결과 출력\n","foot_traffic_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":242},"id":"OcKoeLXGdiCa","executionInfo":{"status":"ok","timestamp":1689239639493,"user_tz":-540,"elapsed":16,"user":{"displayName":"박강희","userId":"15551753251459936912"}},"outputId":"cc1102a6-3860-4bd4-caa1-31d3f5a0e9a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-92-b7063a57c24f>:6: RuntimeWarning: divide by zero encountered in double_scalars\n","  rate = (curr_visitor - prev_visitor) / prev_visitor\n"]},{"output_type":"execute_result","data":{"text/plain":["            자치구        측정날짜   방문자수        증감률\n","0     Dobong-gu  2023-01-01  832.0   0.000000\n","1  Eunpyeong-gu  2023-01-01    8.0  -0.990385\n","2  Yangcheon-gu  2023-01-01  555.0  50.000000\n","3    Gangbuk-gu  2023-01-01  457.0  -0.176577\n","4     Songpa-gu  2023-01-01  122.0  -0.733042"],"text/html":["\n","\n","  <div id=\"df-6c3dd662-a136-4e5c-8393-0ed6467fd4fc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>자치구</th>\n","      <th>측정날짜</th>\n","      <th>방문자수</th>\n","      <th>증감률</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dobong-gu</td>\n","      <td>2023-01-01</td>\n","      <td>832.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Eunpyeong-gu</td>\n","      <td>2023-01-01</td>\n","      <td>8.0</td>\n","      <td>-0.990385</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Yangcheon-gu</td>\n","      <td>2023-01-01</td>\n","      <td>555.0</td>\n","      <td>50.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gangbuk-gu</td>\n","      <td>2023-01-01</td>\n","      <td>457.0</td>\n","      <td>-0.176577</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Songpa-gu</td>\n","      <td>2023-01-01</td>\n","      <td>122.0</td>\n","      <td>-0.733042</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c3dd662-a136-4e5c-8393-0ed6467fd4fc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-6037999e-196a-49fb-ba63-8c18ed955ea6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6037999e-196a-49fb-ba63-8c18ed955ea6')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-6037999e-196a-49fb-ba63-8c18ed955ea6 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6c3dd662-a136-4e5c-8393-0ed6467fd4fc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6c3dd662-a136-4e5c-8393-0ed6467fd4fc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["# 데이터 필터링\n","foot_traffic_filtered = foot_traffic_df[(foot_traffic_df['자치구'] == 'Gangnam-gu') & (foot_traffic_df['측정날짜'] >= '2023-01-01') & (foot_traffic_df['측정날짜'] <= '2023-01-31')]\n","rain_fall_filtered = rain_fall_grouped_df[(rain_fall_grouped_df['Gu'] == '강남구') & (rain_fall_grouped_df['Date'] >= '2023-01-01') & (rain_fall_grouped_df['Date'] <= '2023-01-31')]\n","\n","# 서브 플롯 생성\n","fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 8))\n","\n","# 45도 회전\n","plt.xticks(rotation=45)\n","\n","# 첫 번째 서브 플롯 (방문자수)\n","ax1.plot(foot_traffic_filtered['측정날짜'], foot_traffic_filtered['증감률'], color='orange')\n","ax1.set_ylabel('증감률')\n","ax1.set_xticks(foot_traffic_filtered['측정날짜'])\n","ax1.set_xticklabels(foot_traffic_filtered['측정날짜'], rotation=45)\n","\n","# 두 번째 서브 플롯 (일일 강수량)\n","ax2.plot(rain_fall_filtered['Date'], rain_fall_filtered['DailyRain'], color='red')\n","ax2.set_ylabel('일일 강수량')\n","ax2.set_xlabel('날짜')\n","\n","# 타이틀 추가\n","plt.suptitle('1월 방문자수와 일일 강수량')\n","\n","# 그래프 간격 조절\n","plt.tight_layout(h_pad=5, w_pad=8)\n","\n","# 그래프 표시\n","plt.rc('font', family='NanumGothic')\n","plt.show()\n","\n","#1월 12일 강남-제20회 대한민국 교육박람회"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":807},"id":"1UCqRdILJRfo","executionInfo":{"status":"ok","timestamp":1689239835003,"user_tz":-540,"elapsed":1684,"user":{"displayName":"박강희","userId":"15551753251459936912"}},"outputId":"3d533223-b3cc-47c7-cb77-6c184a551208"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","\n","# 데이터 필터링\n","foot_traffic_filtered = foot_traffic_df[(foot_traffic_df['자치구'] == 'Gangnam-gu') & (foot_traffic_df['측정날짜'] >= '2023-01-01') & (foot_traffic_df['측정날짜'] <= '2023-01-31')]\n","rain_fall_filtered = rain_fall_grouped_df[(rain_fall_grouped_df['Gu'] == '강남구') & (rain_fall_grouped_df['Date'] >= '2023-01-01') & (rain_fall_grouped_df['Date'] <= '2023-01-31')]\n","\n","# 최소-최대 스케일링\n","scaler = MinMaxScaler()\n","foot_traffic_scaled = scaler.fit_transform(foot_traffic_filtered[['증감률']])\n","rain_fall_scaled = scaler.fit_transform(rain_fall_filtered[['DailyRain']])\n","\n","\n","# 산점도 그리기\n","plt.scatter(foot_traffic_scaled, rain_fall_scaled)\n","plt.xlabel('증감률')\n","plt.ylabel('일일 강수량')\n","plt.title('1월 방문자수 증감률과 일일 강수량의 산점도')\n","\n","# 그래프 표시\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"zp67jtrwSiRt","executionInfo":{"status":"ok","timestamp":1689239903358,"user_tz":-540,"elapsed":347,"user":{"displayName":"박강희","userId":"15551753251459936912"}},"outputId":"9bbe2dc2-3e88-4214-8778-bf9e8b4b1621"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from scipy.stats import pearsonr\n","from scipy.stats import spearmanr"],"metadata":{"id":"JvMzwjNcUg5c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["correlation = spearmanr(foot_traffic_scaled, rain_fall_scaled)\n","print(correlation)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-G3sX__KX7dt","executionInfo":{"status":"ok","timestamp":1689239722351,"user_tz":-540,"elapsed":410,"user":{"displayName":"박강희","userId":"15551753251459936912"}},"outputId":"949cb9e3-775c-4c13-e724-bed1f4508a7f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["SignificanceResult(statistic=-0.12836594103378696, pvalue=0.4913291433109749)\n"]}]},{"cell_type":"code","source":["# 데이터 필터링\n","foot_traffic_filtered = foot_traffic_df[(foot_traffic_df['자치구'] == 'Gangnam-gu') & (foot_traffic_df['측정날짜'] >= '2023-02-01') & (foot_traffic_df['측정날짜'] <= '2023-02-28')]\n","rain_fall_filtered = rain_fall_grouped_df[(rain_fall_grouped_df['Gu'] == '강남구') & (rain_fall_grouped_df['Date'] >= '2023-02-02') & (rain_fall_grouped_df['Date'] <= '2023-02-28')]\n","\n","# 2월 6일부터 2월 12일까지의 데이터 제외\n","rain_fall_filtered_more = rain_fall_filtered[~rain_fall_filtered['Date'].between('2023-02-06', '2023-02-12')]\n","\n","# 서브 플롯 생성\n","fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 8))\n","\n","# 45도 회전\n","plt.xticks(rotation=45)\n","\n","# 첫 번째 서브 플롯 (방문자수)\n","ax1.plot(foot_traffic_filtered['측정날짜'], foot_traffic_filtered['증감률'], color='orange')\n","ax1.set_ylabel('증감률')\n","ax1.set_xticks(foot_traffic_filtered['측정날짜'])\n","ax1.set_xticklabels(foot_traffic_filtered['측정날짜'], rotation=45)\n","\n","# 두 번째 서브 플롯 (일일 강수량)\n","ax2.plot(rain_fall_filtered_more['Date'], rain_fall_filtered_more['DailyRain'], color='red')\n","ax2.set_ylabel('일일 강수량')\n","ax2.set_xlabel('날짜')\n","\n","# 타이틀 추가\n","plt.suptitle('2월 방문자수와 일일 강수량')\n","\n","# 그래프 간격 조절\n","plt.tight_layout(h_pad=5, w_pad=8)\n","\n","# 그래프 표시\n","plt.rc('font', family='NanumGothic')\n","plt.show()\n","\n","#1월 12일 강남-제20회 대한민국 교육박람회"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":807},"id":"VmlWkApTiJYk","executionInfo":{"status":"ok","timestamp":1689240918421,"user_tz":-540,"elapsed":1206,"user":{"displayName":"박강희","userId":"15551753251459936912"}},"outputId":"10b8cda1-2169-4239-e1f3-4f9d41eb7a16"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","\n","# 데이터 필터링\n","foot_traffic_filtered = foot_traffic_df[(foot_traffic_df['자치구'] == 'Gangnam-gu') & (foot_traffic_df['측정날짜'] >= '2023-02-01') & (foot_traffic_df['측정날짜'] <= '2023-02-28')]\n","rain_fall_filtered = rain_fall_grouped_df[(rain_fall_grouped_df['Gu'] == '강남구') & (rain_fall_grouped_df['Date'] >= '2023-02-02') & (rain_fall_grouped_df['Date'] <= '2023-02-28')]\n","\n","# 2월 6일부터 2월 12일까지의 데이터 제외\n","rain_fall_filtered_more = rain_fall_filtered[~rain_fall_filtered['Date'].between('2023-02-06', '2023-02-12')]\n","\n","# 최소-최대 스케일링\n","scaler = MinMaxScaler()\n","foot_traffic_scaled = scaler.fit_transform(foot_traffic_filtered[['증감률']])\n","rain_fall_scaled = scaler.fit_transform(rain_fall_filtered_more[['DailyRain']])\n","\n","# 산점도 그리기\n","plt.scatter(foot_traffic_scaled, rain_fall_scaled)\n","plt.xlabel('증감률')\n","plt.ylabel('일일 강수량')\n","plt.title('2월 방문자수 증감률과 일일 강수량의 산점도')\n","\n","# 그래프 표시\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"QzkoTZ27i358","executionInfo":{"status":"ok","timestamp":1689240865901,"user_tz":-540,"elapsed":545,"user":{"displayName":"박강희","userId":"15551753251459936912"}},"outputId":"00ac7d69-a8d0-4bfd-b86d-def3e357573c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}